# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  win: circleci/windows@4.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  test:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: rust:latest
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Test workspace"
          command: "cargo test --workspace"

  build:
    docker:
      - image: rust:latest
    steps:
      - checkout
      - run:
          name: "build server"
          command: "cargo build --release"

  build-win: # name of your job
    # shell: bash.exe
    executor:
      name: win/default # executor type
      size: "medium" # resource class, can be "medium", "large", "xlarge", "2xlarge", defaults to "medium" if not specified

    steps:
      - checkout
      - run:
          name: install
          command: |
            $url = "https://static.rust-lang.org/rustup/dist/x86_64-pc-windows-msvc/rustup-init.exe"
            $outpath = "$pwd\rustup-init.exe"
            Invoke-WebRequest -Uri $url -OutFile $outpath
            .\rustup-init.exe -y
            ls ~\.cargo\bin
      - run:
          environment:
            CARGO_NET_GIT_FETCH_WITH_CLI: "true"
          name: "build dashboard"
          command: |
            ~\.cargo\bin\cargo.exe build --release -p dashboard
      - run:
          environment:
            CARGO_NET_GIT_FETCH_WITH_CLI: "true"
          name: "build widget"
          command: |
            ~\.cargo\bin\cargo.exe build --release -p widget

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  # test-workflow:
  #   jobs:
  #     - test

  build-workflow:
    jobs:
      # - build
      - build-win
